.container {
  flex: 1;
  margin-block: 1em;
}

.form {
  margin-inline: 0.5em;

  & div > p {
    font-size: 0.8em;
    text-wrap: balance;
    overflow-wrap: break-word;
    word-break: break-word;
    text-align: center;
    margin-top: 1em;
  }
}

.form > div:first-child {
  display: flex;
  flex-direction: column;
  align-items: center;
}

.error {
  --font-size: 0.75em;
  --lightness: 40%;

  font-size: var(--font-size);
  min-height: var(--font-size);
  color: hsl(from var(--accent) h s var(--lightness));
}

.aboutMe {
  & label {
    display: flex;
    gap: 0.5em;
    flex-direction: column;
  }

  & textarea {
    min-height: 100px;
    resize: none;
    padding: 0.5em;
  }
}

.avatar {
  position: relative;

  & img {
    border-radius: 50%;
  }
}

.fileUpload {
  isolation: isolate;
  pointer-events: none;
  cursor: pointer;
  position: relative;

  & input {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    opacity: 0;

    &::file-selector-button {
      width: 100%;
      height: 100%;
      margin: 0;
      pointer-events: all;
      cursor: pointer;
      z-index: 1;
    }
  }

  --lightness: 24%;

  &:has(input:focus-visible) {
    border-color: hsl(from var(--secondary) h s var(--lightness));

    & svg {
      color: hsl(from var(--secondary) h s var(--lightness));
    }
  }

  &.active {
    background-color: hsl(from var(--secondary) h s var(--lightness));
    border-color: var(--background);

    & svg {
      color: var(--background);
    }
  }
}

.buttons {
  --button-size: 2.5rem;

  position: absolute;
  bottom: 0;
  display: flex;
  min-width: 300px;
  justify-content: space-between;
  padding-inline: 3.5em;

  & svg {
    width: calc(var(--button-size) - 1em);
    height: calc(var(--button-size) - 1em);
  }
}

.deleteBtn,
.fileUpload {
  display: flex;
  justify-content: center;
  align-items: center;
  border: 2px solid var(--text);
  padding: 0.5em;
  border-radius: 50%;
  background-color: var(--background);
  transition-property: color, background-color;
  transition-duration: 0.25s;
  transition-timing-function: ease-in-out;
}

.deleteBtn {
  --lightness: 40%;

  color: hsl(from var(--accent) h s var(--lightness));

  &:disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }

  &:focus-visible,
  &:active,
  &.active {
    background-color: hsl(from var(--accent) h s var(--lightness));
    border-color: var(--background);

    & svg {
      color: var(--background);
    }
  }
}

.deleteBtn.active {
  &:focus-visible,
  &:active {
    background-color: var(--background);
    border-color: var(--text);

    & svg {
      color: hsl(from var(--accent) h s var(--lightness));
    }
  }
}

div:has(.save) {
  display: flex;
}

.save {
  background-color: transparent;
  border: none;

  margin-left: auto;
  margin-right: 0.5em;
  margin-top: 0.5em;

  --lightness: 24%;
  & svg {
    width: 32px;
    height: 32px;
    color: hsl(from var(--secondary) h s var(--lightness));
    transition: color 0.25s ease-in-out;
  }

  &:active,
  &:focus-visible {
    --lightness: 45%;
    filter: drop-shadow(0 0 1em hsl(from var(--secondary) h s var(--lightness)));
  }
}

@media screen and (max-width: 60em) {
  .reverse {
    flex-direction: column-reverse;
  }

  .reverse > div:first-child {
    max-height: fit-content;
  }

  .container {
    max-height: calc(100vh - 88px - 1em);
    margin-block: 1em 0.5em;
  }

  .avatar {
    max-width: 220px;
    height: auto;

    & img {
      width: 100%;
      height: auto;
    }
  }

  .form > div > p {
    margin-top: 0.75em;
    font-size: 0.75em;
  }

  .buttons {
    --button-size: 2rem;

    min-width: 220px;
    padding-inline: 2.2em;
  }

  .aboutMe {
    & label > span {
      font-size: 0.9em;
    }

    & textarea {
      min-height: 75px;
    }
  }
}

@media (hover: hover) and (pointer: fine) {
  .save:hover {
    --lightness: 45%;
    filter: drop-shadow(0 0 1em hsl(from var(--secondary) h s var(--lightness)));
  }

  .deleteBtn:hover {
    background-color: hsl(from var(--accent) h s var(--lightness));
    border-color: var(--background);

    & svg {
      color: var(--background);
    }

    &.active {
      background-color: var(--background);
      border-color: var(--text);

      & svg {
        color: hsl(from var(--accent) h s var(--lightness));
      }
    }
  }

  .fileUpload:hover {
    border-color: hsl(from var(--secondary) h s var(--lightness));

    & svg {
      color: hsl(from var(--secondary) h s var(--lightness));
    }
  }
}

@media (prefers-color-scheme: dark) {
  .save {
    --lightness: 34%;
  }

  .error {
    --lightness: 65%;
  }

  .fileUpload {
    --lightness: 34%;
  }
}
